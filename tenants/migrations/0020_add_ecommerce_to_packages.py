# Generated by Django 4.2.24 on 2025-11-01 13:14

from django.db import migrations


def add_ecommerce_to_packages(apps, schema_editor):
    """
    Add ecommerce_crm feature to specific packages

    Packages that will get the feature:
    - Professional
    - Enterprise
    - Business (if exists)

    Adjust the package_names list below to match your package structure
    """
    Package = apps.get_model('tenants', 'Package')
    Feature = apps.get_model('tenants', 'Feature')
    PackageFeature = apps.get_model('tenants', 'PackageFeature')

    # Get the ecommerce_crm feature
    try:
        ecommerce_feature = Feature.objects.get(key='ecommerce_crm')
        print(f"‚úÖ Found ecommerce_crm feature (ID: {ecommerce_feature.id})")
    except Feature.DoesNotExist:
        print("‚ö†Ô∏è  ecommerce_crm feature not found. Run migration 0019 first.")
        return

    # List of package names to add the feature to
    # CUSTOMIZE THIS LIST based on your packages
    package_names = [
        'Professional',
        'Enterprise',
        'Business',
        # Add more package names here as needed
    ]

    added_count = 0
    skipped_count = 0

    for package_name in package_names:
        try:
            package = Package.objects.get(name=package_name)

            # Check if already exists
            pf, created = PackageFeature.objects.get_or_create(
                package=package,
                feature=ecommerce_feature,
                defaults={'is_active': True}
            )

            if created:
                print(f"‚úÖ Added ecommerce_crm to '{package_name}' package")
                added_count += 1
            else:
                if not pf.is_active:
                    pf.is_active = True
                    pf.save()
                    print(f"‚úÖ Activated ecommerce_crm for '{package_name}' package")
                    added_count += 1
                else:
                    print(f"‚ÑπÔ∏è  '{package_name}' already has ecommerce_crm")
                    skipped_count += 1

        except Package.DoesNotExist:
            print(f"‚ö†Ô∏è  Package '{package_name}' not found, skipping")
            skipped_count += 1

    print(f"\nüìä Summary:")
    print(f"   - Features added/activated: {added_count}")
    print(f"   - Skipped: {skipped_count}")
    print(f"   - Total processed: {len(package_names)}")


def remove_ecommerce_from_packages(apps, schema_editor):
    """
    Reverse migration: Remove ecommerce_crm from packages
    """
    Package = apps.get_model('tenants', 'Package')
    Feature = apps.get_model('tenants', 'Feature')
    PackageFeature = apps.get_model('tenants', 'PackageFeature')

    try:
        ecommerce_feature = Feature.objects.get(key='ecommerce_crm')
        deleted_count = PackageFeature.objects.filter(
            feature=ecommerce_feature
        ).delete()[0]
        print(f"‚ùå Removed ecommerce_crm from {deleted_count} package(s)")
    except Feature.DoesNotExist:
        print("‚ö†Ô∏è  ecommerce_crm feature not found")


class Migration(migrations.Migration):

    dependencies = [
        ('tenants', '0019_add_ecommerce_crm_feature'),
    ]

    operations = [
        migrations.RunPython(
            add_ecommerce_to_packages,
            remove_ecommerce_from_packages
        ),
    ]
