# Generated by Django 4.2.24 on 2025-10-29 06:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tenants', '0009_add_bog_order_id_to_payment_order'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text="Unique identifier for code (e.g., 'whatsapp_integration')", max_length=100, unique=True)),
                ('name', models.CharField(help_text="Display name (e.g., 'WhatsApp Integration')", max_length=100)),
                ('description', models.TextField(blank=True, help_text='Detailed description of what this feature provides')),
                ('category', models.CharField(choices=[('core', 'Core Features'), ('integration', 'Integrations'), ('analytics', 'Analytics & Reporting'), ('communication', 'Communication'), ('support', 'Support & Services'), ('limits', 'Limits & Quotas')], default='core', max_length=20)),
                ('icon', models.CharField(blank=True, help_text='Icon name or emoji for UI display', max_length=50)),
                ('sort_order', models.IntegerField(default=0, help_text='Order for display in lists')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this feature is currently available')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Feature',
                'verbose_name_plural': 'Features',
                'ordering': ['category', 'sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text="Unique identifier (e.g., 'tickets.create', 'analytics.export')", max_length=100, unique=True)),
                ('name', models.CharField(help_text="Display name (e.g., 'Create Tickets')", max_length=100)),
                ('description', models.TextField(blank=True, help_text='What this permission allows')),
                ('module', models.CharField(help_text="Module this permission belongs to (e.g., 'tickets', 'analytics')", max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
                'ordering': ['module', 'key'],
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('granted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permissions_granted', to=settings.AUTH_USER_MODEL)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions', to='tenants.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions_custom', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Permission',
                'verbose_name_plural': 'User Permissions',
                'indexes': [models.Index(fields=['user', 'is_active'], name='tenants_use_user_id_0f8999_idx')],
                'unique_together': {('user', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='TenantPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('granted_by_feature', models.ForeignKey(blank=True, help_text='Which feature granted this permission', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenants.feature')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_permissions', to='tenants.permission')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_permissions', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Tenant Permission',
                'verbose_name_plural': 'Tenant Permissions',
                'unique_together': {('tenant', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='TenantFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled_at', models.DateTimeField(auto_now_add=True)),
                ('disabled_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('custom_value', models.JSONField(blank=True, help_text='Tenant-specific feature configuration', null=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_features', to='tenants.feature')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_features', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Tenant Feature',
                'verbose_name_plural': 'Tenant Features',
                'unique_together': {('tenant', 'feature')},
            },
        ),
        migrations.CreateModel(
            name='PackageFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_value', models.JSONField(blank=True, help_text='Custom configuration for this feature (limits, settings, etc.)', null=True)),
                ('is_highlighted', models.BooleanField(default=False, help_text='Highlight this feature in package comparison')),
                ('sort_order', models.IntegerField(default=0, help_text='Override default feature sort order for this package')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_features', to='tenants.feature')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_features', to='tenants.package')),
            ],
            options={
                'verbose_name': 'Package Feature',
                'verbose_name_plural': 'Package Features',
                'ordering': ['sort_order', 'feature__sort_order'],
                'unique_together': {('package', 'feature')},
            },
        ),
        migrations.CreateModel(
            name='FeaturePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=True, help_text='If False, this permission can be selectively granted')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='tenants.feature')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='tenants.permission')),
            ],
            options={
                'verbose_name': 'Feature Permission',
                'verbose_name_plural': 'Feature Permissions',
                'unique_together': {('feature', 'permission')},
            },
        ),
    ]
