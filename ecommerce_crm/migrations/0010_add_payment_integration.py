# Generated by Django 4.2.24 on 2025-11-02 01:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('tenants', '0024_add_missing_ticket_permissions'),
        ('ecommerce_crm', '0009_passwordresettoken'),
    ]

    operations = [
        migrations.CreateModel(
            name='EcommerceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bog_client_id', models.CharField(blank=True, help_text='Bank of Georgia Client ID', max_length=255)),
                ('bog_client_secret_encrypted', models.BinaryField(blank=True, help_text='Encrypted Bank of Georgia Client Secret', null=True)),
                ('bog_use_production', models.BooleanField(default=False, help_text='Use production BOG API (unchecked = test environment)')),
                ('enable_cash_on_delivery', models.BooleanField(default=True, help_text='Allow cash on delivery payments')),
                ('enable_card_payment', models.BooleanField(default=True, help_text='Allow card payments via BOG')),
                ('store_name', models.CharField(blank=True, help_text='Store name for payment descriptions', max_length=255)),
                ('store_email', models.EmailField(blank=True, help_text='Store contact email', max_length=254)),
                ('store_phone', models.CharField(blank=True, help_text='Store contact phone', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ecommerce Settings',
                'verbose_name_plural': 'Ecommerce Settings',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='bog_order_id',
            field=models.CharField(blank=True, help_text='Bank of Georgia order ID', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='paid_at',
            field=models.DateTimeField(blank=True, help_text='When payment was completed', null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Payment gateway response data'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_method',
            field=models.CharField(blank=True, default='card', help_text='Payment method (card, cash_on_delivery, etc.)', max_length=50),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_status',
            field=models.CharField(choices=[('pending', 'Pending Payment'), ('paid', 'Paid'), ('failed', 'Payment Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', help_text='Payment status', max_length=20),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_url',
            field=models.URLField(blank=True, help_text='BOG payment page URL', null=True),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['payment_status', '-created_at'], name='ecommerce_c_payment_9cfc08_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['bog_order_id'], name='ecommerce_c_bog_ord_a68cb4_idx'),
        ),
        migrations.AddField(
            model_name='ecommercesettings',
            name='tenant',
            field=models.OneToOneField(help_text='Tenant these settings belong to', on_delete=django.db.models.deletion.CASCADE, related_name='ecommerce_settings', to='tenants.tenant'),
        ),
    ]
