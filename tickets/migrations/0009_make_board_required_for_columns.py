# Generated by Django 4.2.23 on 2025-09-03 19:50

from django.db import migrations, models
from django.conf import settings


def migrate_columns_to_default_board(apps, schema_editor):
    """
    Migrate existing ticket columns to the default board.
    If no default board exists, create one.
    """
    TicketColumn = apps.get_model('tickets', 'TicketColumn')
    Board = apps.get_model('tickets', 'Board')
    
    # Check if there are any columns without a board
    columns_without_board = TicketColumn.objects.filter(board__isnull=True)
    
    if columns_without_board.exists():
        # Get or create a default board
        default_board = Board.objects.filter(is_default=True).first()
        
        if not default_board:
            # Create a default board
            from django.contrib.auth import get_user_model
            User = get_user_model()
            
            # Get the first superuser or create a system user
            admin_user = User.objects.filter(is_superuser=True).first()
            if not admin_user:
                admin_user = User.objects.first()
            
            if admin_user:
                default_board = Board.objects.create(
                    name="Default Board",
                    description="Default board for existing ticket columns",
                    is_default=True,
                    created_by=admin_user
                )
        
        # Assign all columns without a board to the default board
        if default_board:
            columns_without_board.update(board=default_board)
            print(f"Migrated {columns_without_board.count()} ticket columns to the default board.")


def reverse_migration(apps, schema_editor):
    """
    Reverse the migration by setting board to null for all columns
    that were assigned to the default board.
    """
    TicketColumn = apps.get_model('tickets', 'TicketColumn')
    Board = apps.get_model('tickets', 'Board')
    
    # Find the default board
    default_board = Board.objects.filter(is_default=True).first()
    if default_board:
        # Set board to null for all columns assigned to the default board
        TicketColumn.objects.filter(board=default_board).update(board=None)


class Migration(migrations.Migration):

    dependencies = [
        ('tickets', '0008_auto_20250903_0105'),
    ]

    operations = [
        migrations.RunPython(
            migrate_columns_to_default_board,
            reverse_migration,
        ),
        # After migrating data, make board field required
        migrations.AlterField(
            model_name='ticketcolumn',
            name='board',
            field=models.ForeignKey(
                on_delete=models.CASCADE,
                related_name='columns',
                to='tickets.board',
                help_text='Board this column belongs to'
            ),
        ),
    ]
