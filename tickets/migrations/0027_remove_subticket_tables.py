# Generated by Django 4.2.24 on 2025-11-02 00:16

from django.db import migrations


def remove_constraint_if_exists(apps, schema_editor):
    """Remove the constraint if it exists, silently ignore if it doesn't."""
    with schema_editor.connection.cursor() as cursor:
        # Check if constraint exists
        cursor.execute("""
            SELECT COUNT(*)
            FROM information_schema.table_constraints
            WHERE constraint_name = 'checklist_item_belongs_to_ticket_or_sub_ticket'
            AND table_name = 'tickets_checklistitem'
            AND table_schema = current_schema()
        """)
        exists = cursor.fetchone()[0] > 0

        if exists:
            cursor.execute("""
                ALTER TABLE tickets_checklistitem
                DROP CONSTRAINT IF EXISTS checklist_item_belongs_to_ticket_or_sub_ticket
            """)


class Migration(migrations.Migration):

    dependencies = [
        ('tickets', '0026_tickethistory'),
    ]

    operations = [
        # Remove CheckConstraint for ticket/sub_ticket validation (if exists)
        migrations.RunPython(
            remove_constraint_if_exists,
            reverse_code=migrations.RunPython.noop,
        ),
        # Remove sub_ticket field from ChecklistItem
        migrations.RemoveField(
            model_name='checklistitem',
            name='sub_ticket',
        ),
        # Drop SubTicketAssignment model (many-to-many through table)
        migrations.DeleteModel(
            name='SubTicketAssignment',
        ),
        # Drop SubTicket model
        migrations.DeleteModel(
            name='SubTicket',
        ),
    ]
